<MudPaper Width="250px" Class="d-inline-flex py-3" Elevation="0">
    <MudNavMenu Class="mud-width-full" Bordered="true">
        @if(_pageSettings is not null)
        {
            @foreach(var oscControl in _pageSettings.Controls)
            {
                <MudNavLink Href="@GetLink(oscControl)" Match="GetLinkMatch(oscControl)">@oscControl.Name</MudNavLink>
            }            
        }
    </MudNavMenu>
</MudPaper>

@code {
    private Models.PageSettings? _pageSettings = null;

    private bool IsFirst(Models.OSCControl cntrl) {
        return _pageSettings?.Controls.FirstOrDefault() == cntrl;
    
   }


    
    private NavLinkMatch GetLinkMatch(Models.OSCControl cntrl) => 
    (_pageSettings?.Controls.FirstOrDefault() == cntrl ? NavLinkMatch.All : NavLinkMatch.Prefix);
    private string GetLink(Models.OSCControl cntrl) => $"/osc/{System.Web.HttpUtility.UrlDecode(cntrl.Name)}";

    protected override async Task OnInitializedAsync()
    {   

        await base.OnInitializedAsync();

        try
        {
            _pageSettings = await IOscService.GetSettings();
        }
        catch (Exception ex)
        {
            Snackbar.Add("Config-Fehler: " + ex.Message, Severity.Error, settings =>
            {
                settings.VisibleStateDuration = 20000;
                settings.DuplicatesBehavior = SnackbarDuplicatesBehavior.Prevent;
            });
        }

    }

}